# This playbook will set the specified host to a static ip address
# utility for uniformity of the ip addresses

- name: Set static IP on Rocky Linux with dynamic interface detection
  hosts: all
  become: yes
  vars:
    gateway: 192.168.1.1
    dns: 192.168.1.1

  tasks:
    - name: Find active ethernet interface
      command: nmcli -t -f DEVICE,TYPE device status
      register: nmcli_output

    - name: Parse ethernet interface name
      set_fact:
        eth_iface: "{{ item.split(':')[0] }}"
      loop: "{{ nmcli_output.stdout_lines }}"
      when: "'ethernet' in item"
      register: iface_fact



    - name: Debug parsed ethernet interfaces
      debug:
        var: iface_fact.results

    - name: Set interface fact from first ethernet device found
      set_fact:
        eth_iface: "{{ iface_fact.results | selectattr('skipped', 'equalto', False) | map(attribute='ansible_facts.eth_iface') | first }}"
      when: eth_iface is not defined

    - name: Debug selected interface
      debug:
        var: eth_iface

    - name: Configure static IP using nmcli (manual method)
      command: >
        nmcli con mod "{{ eth_iface }}"
        ipv4.addresses "{{ hostvars[inventory_hostname].static_ip }}/24"
        ipv4.gateway "{{ gateway }}"
        ipv4.dns "{{ dns }}"
        ipv4.method manual

    - name: Reload NetworkManager connections (avoid disconnect)
      command: nmcli con reload

    - name: Wait for network to stabilize
      pause:
        seconds: 10

    - name: Confirm interface IP
      command: ip -4 addr show dev "{{ eth_iface }}"
      register: ip_check

    - name: Display assigned IP
      debug:
        var: ip_check.stdout_lines
