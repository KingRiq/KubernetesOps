# ================================
# 1. Namespace
# ================================
apiVersion: v1
kind: Namespace
metadata:
  name: {{ nextcloud_namespace }}
---
# ================================
# 2. NFS Server Deployment
# ================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: {{ nextcloud_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        kubernetes.io/hostname: {{ storage_node }}
      containers:
        - name: nfs
          image: itsthenetwork/nfs-server-alpine:latest
          securityContext:
            privileged: true
          env:
            - name: SHARED_DIRECTORY
              value: "{{ nfs_export_path }}"
            - name: EXPORT_OPTIONS
              value: "rw,fsid=0,async,no_subtree_check,insecure,no_root_squash,crossmnt"
          ports:
            - containerPort: 2049
              name: nfs
              protocol: TCP
          readinessProbe:
            tcpSocket: { port: 2049 }
            initialDelaySeconds: 3
            periodSeconds: 5
          volumeMounts:
            - name: nfs-data
              mountPath: "{{ nfs_export_path }}"
              mountPropagation: HostToContainer
            - name: nfs-crystal
              mountPath: /exports/Crystal_Tokyo
              mountPropagation: HostToContainer
            - name: nfs-silver
              mountPath: /exports/Silver_Millenium
              mountPropagation: HostToContainer
            - name: nfs-shadow
              mountPath: /exports/Shadow_Galactica
              mountPropagation: HostToContainer
            - name: nfs-mariadb
              mountPath: /exports/nextcloud-mariadb
              mountPropagation: HostToContainer
      volumes:
        - name: nfs-data
          hostPath:
            path: "{{ storage_host_path }}"
            type: DirectoryOrCreate
        - name: nfs-crystal
          hostPath:
            path: /mnt/windows/share/Crystal_Tokyo
            type: DirectoryOrCreate
        - name: nfs-silver
          hostPath:
            path: /mnt/windows/share/Silver_Millenium
            type: DirectoryOrCreate
        - name: nfs-shadow
          hostPath:
            path: /mnt/windows/share/Shadow_Galactica
            type: DirectoryOrCreate
        - name: nfs-mariadb
          hostPath:
            path: /mnt/windows/share/nextcloud-mariadb
            type: DirectoryOrCreate
---
# ================================
# 3. PersistentVolumeClaims (dynamic via StorageClass)
# ================================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: artemis
  namespace: {{ nextcloud_namespace }}
  labels:
    dir: Crystal_Tokyo
spec:
  accessModes: ["ReadWriteMany"]
  resources:
    requests:
      storage: 1Ti
  storageClassName: nfs-rwx
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: luna
  namespace: {{ nextcloud_namespace }}
  labels:
    dir: Silver_Millenium
spec:
  accessModes: ["ReadWriteMany"]
  resources:
    requests:
      storage: 1Ti
  storageClassName: nfs-rwx
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: axion
  namespace: {{ nextcloud_namespace }}
  labels:
    dir: Shadow_Galactica
spec:
  accessModes: ["ReadWriteMany"]
  resources:
    requests:
      storage: 100Gi
  storageClassName: nfs-rwx
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-mariadb
  namespace: {{ nextcloud_namespace }}
  labels:
    dir: nextcloud-mariadb
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 50Gi
  storageClassName: nfs-rwo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-data
  namespace: {{ nextcloud_namespace }}
  labels:
    dir: nextcloud-data
spec:
  accessModes: ["ReadWriteMany"]
  resources:
    requests:
      storage: 500Gi
  storageClassName: nfs-rwx
---
# ================================
# 4. Samba ConfigMap
# ================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: samba-config
  namespace: {{ nextcloud_namespace }}
data:
  smb.conf: |
    [global]
      server role = standalone server
      security = user
      map to guest = Bad Password
      guest account = nobody
      server min protocol = SMB2
      client min protocol = SMB2
      ntlm auth = yes
      log file = /var/log/samba/log.%m
      max log size = 1000

    [CloudData]
      path = /data/share
      browseable = yes
      read only = no
      valid users = galaxia
      guest ok = yes
      public = yes
      guest only = yes
---
# ================================
# 5. Samba Deployment
# ================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: samba
  namespace: {{ nextcloud_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: samba
  template:
    metadata:
      labels:
        app: samba
    spec:
      dnsPolicy: ClusterFirst                            # no hostNetwork when using a Service
      nodeSelector:
        kubernetes.io/hostname: {{ storage_node }}
      containers:
        - name: samba
          image: dperson/samba:latest
          args:
            - "-u"
            - "galaxia;galaxia"
            - "-s"
            - "CloudData;/data/share;yes;no;yes;all"
          securityContext: 
            privileged: true
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "smbcontrol all shutdown"]
          env:
            - name: SAMBA_LOG_LEVEL
              value: "1"
          ports:
            - containerPort: 445
              name: smb
              protocol: TCP
          readinessProbe:
            tcpSocket: { port: 445 }
            initialDelaySeconds: 3
            periodSeconds: 5
          volumeMounts:
            - name: smb-conf
              mountPath: /etc/samba
            - name: data
              mountPath: /data/share                # Samba shares this path
              mountPropagation: HostToContainer
            - name: nextcloud-data
              mountPath: /data/share/nextcloud-data
            - name: artemis-host
              mountPath: /data/share/Crystal_Tokyo
              mountPropagation: HostToContainer
            - name: luna-host
              mountPath: /data/share/Silver_Millenium
              mountPropagation: HostToContainer
            - name: mac-host
              mountPath: /data/share/Shadow_Galactica
              mountPropagation: HostToContainer
            - name: mariadb
              mountPath: /data/share/nextcloud-mariadb
              mountPropagation: HostToContainer
      volumes:
        - name: smb-conf
          configMap: { name: samba-config }
        - name: data
          nfs:
            server: {{ storage_node_ip }}            # same node IP as PV
            path: "/"          # MUST match NFS export path
        - name: artemis-host
          hostPath:
            path: /mnt/windows/share/Crystal_Tokyo
            type: DirectoryOrCreate
        - name: luna-host
          hostPath:
            path: /mnt/windows/share/Silver_Millenium
            type: DirectoryOrCreate
        - name: mac-host
          hostPath:
            path: /mnt/windows/share/Shadow_Galactica
            type: DirectoryOrCreate
        - name: mariadb
          hostPath:
            path: /mnt/windows/share/nextcloud-mariadb
            type: DirectoryOrCreate
        - name: nextcloud-data
          hostPath:
            path: /mnt/windows/share/nextcloud-data
            type: DirectoryOrCreate
---
# ================================
# 6. Services
# ================================
apiVersion: v1
kind: Service
metadata:
  name: samba-lb
  namespace: {{ nextcloud_namespace }}
spec:
  type: LoadBalancer
  loadBalancerIP: {{ samba_assigned_ip }}
  selector:
    app: samba
  ports:
    - name: smb
      port: 445
      targetPort: 445
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: nfs-server
  namespace: {{ nextcloud_namespace }}
spec:
  type: ClusterIP
  selector:
    app: nfs-server
  ports:
    - name: nfs
      port: 2049
      targetPort: 2049
      protocol: TCP
