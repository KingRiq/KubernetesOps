apiVersion: v1
kind: Namespace
metadata:
  name: {{ nextcloud_namespace }}
---
# NFS server pod (exports {{ nfs_export_path }} to the cluster, backed by {{ storage_host_path }} on the node)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: {{ nextcloud_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        kubernetes.io/hostname: {{ storage_node }}
      containers:
        - name: nfs
          image: itsthenetwork/nfs-server-alpine:latest
          securityContext:
            privileged: true
          env:
            - name: SHARED_DIRECTORY
              value: "{{ nfs_export_path }}"         # path exported by the NFS container
            - name: EXPORT_OPTIONS
              value: "rw,fsid=0,async,no_subtree_check,insecure,no_root_squash,crossmnt"
          ports:
            - containerPort: 2049
              name: nfs
              protocol: TCP
          readinessProbe:
            tcpSocket: { port: 2049 }
            initialDelaySeconds: 3
            periodSeconds: 5
          volumeMounts:
            - name: nfs-data
              mountPath: "{{ nfs_export_path }}"      # mount hostPath here inside the container
              mountPropagation: HostToContainer
            - name: nfs-crystal
              mountPath: /exports/Crystal_Tokyo
              mountPropagation: HostToContainer
            - name: nfs-luna
              mountPath: /exports/Silver_Millenium
              mountPropagation: HostToContainer
      volumes:
        - name: nfs-data
          hostPath:
            path: "{{ storage_host_path }}"           # directory on the node
            type: DirectoryOrCreate
        - name: nfs-crystal
          hostPath:
            path: /mnt/windows/share/Crystal_Tokyo   # CIFS mountpoint on worker1
            type: Directory
        - name: nfs-luna
          hostPath:
            path: /mnt/windows/share/Silver_Millenium
            type: Directory
---
# Static PV/PVC for Nextcloud (RWX to the NFS export)
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nextcloud-nfs-pv
spec:
  capacity:
    storage: 2Ti
  accessModes: ["ReadWriteMany"]
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""                                # avoid default StorageClass
  nfs:
    server: {{ storage_node_ip }}                     # node IP where NFS pod runs (hostNetwork)
    path: "/nextcloud-data"                    # MUST match NFS export path
  mountOptions:
    - nfsvers=4.2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-data
  namespace: {{ nextcloud_namespace }}
spec:
  accessModes: ["ReadWriteMany"]
  resources:
    requests:
      storage: 2Ti
  storageClassName: ""                                # bind to the static PV
  volumeName: nextcloud-nfs-pv
---
# Samba config (exports /data/share from inside the container)
apiVersion: v1
kind: ConfigMap
metadata:
  name: samba-config
  namespace: {{ nextcloud_namespace }}
data:
  smb.conf: |
    [global]
      server role = standalone server
      security = user
      map to guest = Bad Password
      guest account = nobody
      server min protocol = SMB2
      client min protocol = SMB2
      ntlm auth = yes
      log file = /var/log/samba/log.%m
      max log size = 1000

    [CloudData]
      path = /data/share
      browseable = yes
      read only = no
      valid users = galaxia
      guest ok = yes
      public = yes
      guest only = yes

---
# Samba pod mounting the same NFS export; exposed via MetalLB
apiVersion: apps/v1
kind: Deployment
metadata:
  name: samba
  namespace: {{ nextcloud_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: samba
  template:
    metadata:
      labels:
        app: samba
    spec:
      dnsPolicy: ClusterFirst                            # no hostNetwork when using a Service
      nodeSelector:
        kubernetes.io/hostname: {{ storage_node }}
      # initContainers:
      #   - name: mount-artemis
      #     image: alpine:latest
      #     securityContext:
      #       privileged: true
      #     command:
      #       - sh
      #       - -c
      #       - |
      #         apk add --no-cache cifs-utils
      #         mkdir -p /data/Crystal_Tokyo
      #         mount -t cifs //ARTEMIS/CloudData /data/Crystal_Tokyo \
      #           -o username={{ smb_username }},password={{ smb_password }},vers=3.1.1,uid=0,gid=0
      #     volumeMounts:
      #       - name: data
      #         mountPath: /data
      #         mountPropagation: HostToContainer

      #   - name: mount-luna
      #     image: alpine:latest
      #     securityContext:
      #       privileged: true
      #     command:
      #       - sh
      #       - -c
      #       - |
      #         apk add --no-cache cifs-utils
      #         mkdir -p /data/Silver_Millenium
      #         mount -t cifs //LUNA/CloudData /data/Silver_Millenium \
      #           -o username={{ smb_username }},password={{ smb_password }},vers=3.1.1,uid=0,gid=0
      #     volumeMounts:
      #       - name: data
      #         mountPath: /data
      #         mountPropagation: HostToContainer
      containers:
        - name: samba
          image: dperson/samba:latest
          args:
            - "-u"
            - "galaxia;galaxia"
            - "-s"
            - "CloudData;/data/share;yes;no;yes;all"
          securityContext: 
            privileged: true   # needed if using mountPropagation
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "smbcontrol all shutdown"]
          env:
            - name: SAMBA_LOG_LEVEL
              value: "1"
          ports:
            - containerPort: 445
              name: smb
              protocol: TCP
          readinessProbe:
            tcpSocket: { port: 445 }
            initialDelaySeconds: 3
            periodSeconds: 5
          volumeMounts:
            - name: smb-conf
              mountPath: /etc/samba
            - name: data
              mountPath: /data/share                # Samba shares this path
              mountPropagation: HostToContainer
            # - name: nextcloud-nfs
            #   mountPath: /data/nextcloud
            - name: artemis-host
              mountPath: /data/share/Crystal_Tokyo
              mountPropagation: HostToContainer
            - name: luna-host
              mountPath: /data/share/Silver_Millenium
              mountPropagation: HostToContainer
      volumes:
        - name: smb-conf
          configMap: { name: samba-config }
        - name: data
          nfs:
            server: {{ storage_node_ip }}            # same node IP as PV
            path: "/"          # MUST match NFS export path
        # - name: nextcloud-nfs         # <-- add this
        #   persistentVolumeClaim:    
        #     claimName: nextcloud-data # bind to your PVC
        - name: artemis-host
          hostPath:
            path: /mnt/windows/share/Crystal_Tokyo
            type: Directory
        - name: luna-host
          hostPath:
            path: /mnt/windows/share/Silver_Millenium
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: samba-lb
  namespace: {{ nextcloud_namespace }}
spec:
  type: LoadBalancer                                   # MetalLB assigns an EXTERNAL-IP
  loadBalancerIP: {{ samba_assigned_ip }}
  selector:
    app: samba
  ports:
    - name: smb
      port: 445
      targetPort: 445
      protocol: TCP
