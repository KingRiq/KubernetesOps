# values.yaml for Immich Helm Chart

controllers:
  main:
    containers:
      main:
        image:
          tag: v2.0.1
        env:
          REDIS_HOSTNAME: immich-valkey
          # REDIS_HOST: immich-valkey
          REDIS_PORT: 6379
          IMMICH_MACHINE_LEARNING_URL: http://ml.chaoscauldron.space
          DB_USERNAME: immich
          DB_DATABASE_NAME: immich_db
          DB_HOSTNAME: immich-postgresql.immich.svc.cluster.local
          DB_PORT: 5432
          UPLOAD_LOCATION: /data/immich-data
          DB_PASSWORD: securepassword

immich:
  image:
    repository: ghcr.io/immich-app/immich-server
    tag: v1.112.1 # change to latest stable
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    port: "80"
    targetPort: "80"
    loadBalancerIP: 192.168.0.223


  persistence:
    library:
      enabled: true
      existingClaim: immich-library
      globalMounts:
        - path: /usr/src/app/upload
  
         
env:
  # Database
  DB_HOST: immich-postgresql.immich.svc.cluster.local
  DB_PORT: "5432"

  # Redis
  REDIS_HOST: immich-valkey
  REDIS_PORT: "6379"

  # REDIS_HOSTNAME: 
  # DB_HOSTNAME: immich-postgresql

  DB_USERNAME: immich
  DB_DATABASE_NAME: immich_db
  # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
  DB_PASSWORD: securepassword
  IMMICH_MACHINE_LEARNING_URL: http://ml.chaoscauldron.space

image:

    # Machine learning worker paths
    MACHINE_LEARNING_URL: http://ml.chaoscauldron.space

    # Upload location inside the PVC
    UPLOAD_LOCATION: /data/immich-data

  # ingress:
  #   enabled: true
  #   className: nginx
  #   annotations:
  #     kubernetes.io/ingress.class: nginx
  #   hosts:
  #     - host: immich.local     # change to your domain
  #       paths:
  #         - path: /
  #           pathType: Prefix
  #   tls: [] # add cert-manager secret if you want HTTPS

# You MUST pin an app version; chart doesnâ€™t track every release.



externalDatabase:
  enabled: true
  host: immich-postgresql.immich.svc.cluster.local
  port: 5432
  user: immich
  password: securepassword
  database: immich_db


valkey:
  enabled: true
  architecture: standalone
  master:
    persistence:
      enabled: false
  image:
    registry: docker.io/
    repository: valkey/valkey
    tag: 8.1-alpine


machine-learning:
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-machine-learning
    tag: release
    pullPolicy: IfNotPresent
  service:
    main:
      enabled: true
      type: LoadBalancer
      loadBalancerIP: 192.168.0.240
      ports:
        http:
          enabled: true
          port: 80
          targetPort: 3003
          protocol: TCP
  env:
    TRANSFORMERS_CACHE: /cache
  persistence:
    cache:
      enabled: true
      size: 10Gi
      # Optional: Set this to pvc to avoid downloading the ML models every start.
      type: emptyDir
      existingClaim: machine-learning


global:
  security:
    allowInsecureImages: true



server:
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-server
    tag: release
    pullPolicy: IfNotPresent
  service:
    main:
      enabled: true
      primary: true
      type: LoadBalancer
      loadBalancerIP: 192.168.0.223  # from your MetalLB pool
      ports:
        http:
          enabled: true
          primary: true
          port: 2283
          protocol: HTTP
        metrics-api:
          enabled: false
          port: 8081
          protocol: HTTP
        metrics-ms:
          enabled: false
          port: 8082
          protocol: HTTP