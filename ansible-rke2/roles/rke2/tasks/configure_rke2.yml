---
# - name: Configure RKE2 server
#   copy:
#     dest: /etc/rancher/rke2/config.yaml
#     content: |
#       write-kubeconfig-mode: "0755"
#       tls-san:
#         - "{{ ansible_host }}"
#       advertise-address: "{{ ansible_host }}"
#     mode: '0755'
#   when: inventory_hostname in groups['control']

- name: Enable the rke2-server
  systemd:
    name: rke2-server
    enabled: yes
  when: inventory_hostname in groups['control']

- name: Start the rke2-server
  systemd:
    name: rke2-server
    state: started
  when: inventory_hostname in groups['control']


- name: Add RKE2 bin directory to root's .bashrc
  lineinfile:
    path: /root/.bashrc
    regexp: '^export PATH='
    line: 'export PATH=$PATH:/var/lib/rancher/rke2/bin'
    create: yes

- name: Wait for RKE2 internal API to become reachable (port 9345)
  wait_for:
    host: "{{ ansible_host }}"
    port: 9345
    timeout: 180
  when: inventory_hostname in groups['control']

- name: Wait for Kubernetes API to become reachable (port 6443)
  wait_for:
    host: "{{ ansible_host }}"
    port: 6443
    timeout: 180
  when: inventory_hostname in groups['control']

- name: Read RKE2 server token
  slurp:
    src: /var/lib/rancher/rke2/server/node-token
  register: rke2_token_file
  when: inventory_hostname in groups['control']

- name: Set token fact on control plane node
  set_fact:
    rke2_token: "{{ rke2_token_file.content | b64decode | trim }}"  
  when: inventory_hostname in groups['control']

- name: Debug token on control-plane
  debug:
    var: rke2_token
  when: inventory_hostname in groups['control']

- name: Share token and server URL with all nodes
  set_fact:
    rke2_token: "{{ hostvars[groups['control'][0]].rke2_token }}"
    rke2_server_url: "https://{{ hostvars[groups['control'][0]].ansible_host }}:9345"

- name: Configure RKE2 agent
  copy:
    dest: /etc/rancher/rke2/config.yaml
    content: |
      server: "{{ rke2_server_url }}"
      token: "{{ rke2_token }}"
    mode: '0600'
  when: inventory_hostname in groups['workers']

- name: Enable rke2-agent service
  systemd:
    name: rke2-agent
    enabled: yes
  when: inventory_hostname in groups['workers']

- name: Start rke2-agent service
  systemd:
    name: rke2-agent
    state: started
  when: inventory_hostname in groups['workers']
  
# - name: Enable and start rke2-agent service
#   systemd:
#     name: rke2-agent
#     enabled: yes
#     state: started
#   when: inventory_hostname in groups['workers']

# - name: Get latest stable kubectl version
#   set_fact:
#     kubectl_version: "{{ lookup('url', 'https://dl.k8s.io/release/stable.txt') | trim }}"

# - name: Download latest stable kubectl binary
#   get_url:
#     url: "https://dl.k8s.io/release/{{ kubectl_version }}/bin/linux/amd64/kubectl"
#     dest: /usr/bin/kubectl
#     mode: '0755'
#   become: yes

# # - name: Restart rke2-server for config changes to take effect
# #   systemd:
# #     name: rke2-server
# #     state: restarted
# #     enabled: yes
# #   when: inventory_hostname in groups['control']

# - name: Wait for RKE2 API server to be ready
#   wait_for:
#     host: "{{ ansible_host }}"
#     port: 6443
#     timeout: 120
#   when: inventory_hostname in groups['control']

# - name: Update kubeconfig server address to external IP on control plane
#   replace:
#     path: /etc/rancher/rke2/rke2.yaml
#     regexp: 'server: https://127\.0\.0\.1:6443'
#     replace: "server: https://{{ ansible_host }}:6443"
#   when: inventory_hostname in groups['control']

# - name: Ensure the certificate authority is included in the kubeconfig
#   copy:
#     dest: /etc/rancher/rke2/rke2.yaml
#     content: |
#       certificate-authority: /var/lib/rancher/rke2/server/tls/server-ca.crt
#     mode: '0644'
#   when: inventory_hostname in groups['control']

# - name: Set KUBECONFIG environment variable for users
#   lineinfile:
#     path: /etc/profile.d/kubeconfig.sh
#     line: "export KUBECONFIG=/etc/rancher/rke2/rke2.yaml"
#     create: yes
#   become: yes
