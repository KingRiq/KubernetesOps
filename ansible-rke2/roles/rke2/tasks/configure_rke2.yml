---
- name: Configure RKE2 server with ServiceLB enabled
  copy:
    dest: /etc/rancher/rke2/config.yaml
    content: |
      cluster-dns: 10.43.0.10
    mode: '0755'
  when: inventory_hostname in groups['control']
      # enable-servicelb: true

- name: Enable the rke2-server
  systemd:
    name: rke2-server
    enabled: yes
  when: inventory_hostname in groups['control']

- name: Start the rke2-server
  systemd:
    name: rke2-server
    state: started
  when: inventory_hostname in groups['control']

- name: Add RKE2 bin directory to root's .bashrc
  lineinfile:
    path: /root/.bashrc
    regexp: '^export PATH='
    line: 'export PATH=$PATH:/var/lib/rancher/rke2/bin'
    create: yes

- name: Add KUBECONFIG to root's .bashrc
  lineinfile:
    path: /root/.bashrc
    regexp: '^export KUBECONFIG='
    line: 'export KUBECONFIG=/etc/rancher/rke2/rke2.yaml'
    create: yes

- name: Wait for RKE2 internal API to become reachable (port 9345)
  wait_for:
    host: "{{ ansible_host }}"
    port: 9345
    timeout: 180
  when: inventory_hostname in groups['control']

- name: Wait for Kubernetes API to become reachable (port 6443)
  wait_for:
    host: "{{ ansible_host }}"
    port: 6443
    timeout: 180
  when: inventory_hostname in groups['control']

- name: Read RKE2 server token
  slurp:
    src: /var/lib/rancher/rke2/server/node-token
  register: rke2_token_file
  when: inventory_hostname in groups['control']

- name: Set token fact on control plane node
  set_fact:
    rke2_token: "{{ rke2_token_file.content | b64decode | trim }}"
  when: inventory_hostname in groups['control']

- name: Debug token on control-plane
  debug:
    var: rke2_token
  when: inventory_hostname in groups['control']

- name: Share token and server URL with all nodes
  set_fact:
    rke2_token: "{{ hostvars[groups['control'][0]].rke2_token }}"
    rke2_server_url: "https://{{ hostvars[groups['control'][0]].ansible_host }}:9345"

- name: Configure RKE2 agent
  copy:
    dest: /etc/rancher/rke2/config.yaml
    content: |
      server: "{{ rke2_server_url }}"
      token: "{{ rke2_token }}"
    mode: '0600'
  when: inventory_hostname in groups['workers']

- name: Enable rke2-agent service
  systemd:
    name: rke2-agent
    enabled: yes
  when: inventory_hostname in groups['workers']

- name: Start rke2-agent service
  systemd:
    name: rke2-agent
    state: started
  when: inventory_hostname in groups['workers']

# - name: Create ingress-nginx LoadBalancer Service (control-plane only)
#   command: /var/lib/rancher/rke2/bin/kubectl apply -f -
#   args:
#     stdin: |
#       apiVersion: v1
#       kind: Service
#       metadata:
#         name: ingress-nginx-lb
#         namespace: kube-system
#       spec:
#         type: LoadBalancer
#         selector:
#           app.kubernetes.io/name: rke2-ingress-nginx
#           app.kubernetes.io/component: controller
#         ports:
#           - name: http
#             port: 80
#             targetPort: 80
#           - name: https
#             port: 443
#             targetPort: 443
#   environment:
#     KUBECONFIG: /etc/rancher/rke2/rke2.yaml
#   run_once: true
#   when: inventory_hostname in groups['control']

# - name: Wait for EXTERNAL-IP
#   command: >
#     /var/lib/rancher/rke2/bin/kubectl -n kube-system get svc ingress-nginx-lb
#     -o jsonpath='{.status.loadBalancer.ingress[*].ip}'
#   environment:
#     KUBECONFIG: /etc/rancher/rke2/rke2.yaml
#   register: ingress_ip
#   until: ingress_ip.stdout | length > 0 and ingress_ip.stdout != "<pending>"
#   retries: 40
#   delay: 3
#   changed_when: false
#   run_once: true
#   delegate_to: "{{ groups['control'][0] }}"

# - debug:
#     msg: "Ingress LB IP(s): {{ ingress_ip.stdout }}"

